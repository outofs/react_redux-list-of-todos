{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","utils/prepareTodos.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","query","status","initialState","filterReducer","_objectSpread","todos","todosReducer","_toConsumableArray","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","prepareString","str","toLowerCase","trim","TodoList","_ref","selectedTodo","dispatch","preparedTodos","todosCopy","preparedQuery","title","includes","completed","prepareTodos","_jsx","_Fragment","children","_jsxs","className","map","classNames","id","onClick","statusArr","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","toUpperCase","slice","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","loading","setLoading","useEffect","userId","concat","finally","href","email","name","App","currTodos","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a219c8f.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Filter } from '../types/Filter';\nimport { Status } from '../types/Status';\n\ntype RemoveQueryAction = { type: 'filter/REMOVE_QUERY' };\n\ntype SetQuery = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\ntype SetStatus = {\n  type: 'filter/SET_STATUS';\n  payload: Status;\n};\n\nconst removeQuery = (): RemoveQueryAction => ({ type: 'filter/REMOVE_QUERY' });\n\nconst setQuery = (query: string): SetQuery => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatus => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nexport const actions = { removeQuery, setQuery, setStatus };\n\ntype Action = RemoveQueryAction | SetQuery | SetStatus;\n\nconst initialState: Filter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: Filter = initialState,\n  action: Action,\n): Filter => {\n  switch (action.type) {\n    case 'filter/REMOVE_QUERY':\n      return { ...state, query: '' };\n\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = {\n  type: 'todo/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: 'todo/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype Action = SetTodos;\n\nconst todosReducer = (todos: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todo/SET':\n      return [...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nfunction prepareString(str: string) {\n  return str.toLowerCase().trim();\n}\n\nexport const prepareTodos = (todos: Todo[], { query, status }: Filter) => {\n  let todosCopy = [...todos];\n\n  if (query) {\n    const preparedQuery = prepareString(query);\n\n    todosCopy = todosCopy.filter(\n      todo => prepareString(todo.title).includes(preparedQuery),\n    );\n  }\n\n  if (status !== 'all') {\n    todosCopy = todosCopy.filter(todo => {\n      switch (status) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n  }\n\n  return todosCopy;\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { prepareTodos } from '../../utils/prepareTodos';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const preparedTodos = prepareTodos(todos, filter);\n\n  return (\n    <>\n      {\n        !preparedTodos.length ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n          : (\n            <table className=\"table is-narrow is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>#</th>\n\n                  <th>\n                    <span className=\"icon\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </th>\n\n                  <th>Title</th>\n                  <th> </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {\n                  preparedTodos.map(todo => (\n                    <tr\n                      data-cy=\"todo\"\n                      className={classNames({\n                        'has-background-info-light': selectedTodo?.id === todo.id,\n                      })}\n                    >\n                      <td className=\"is-vcentered\">{todo.id}</td>\n                      <td className=\"is-vcentered\">\n                        {todo.completed && (\n                          <span className=\"icon\" data-cy=\"iconCompleted\">\n                            <i className=\"fas fa-check\" />\n                          </span>\n                        )}\n                      </td>\n                      <td className=\"is-vcentered is-expanded\">\n                        <p className={classNames({\n                          'has-text-danger': !todo.completed,\n                          'has-text-success': todo.completed,\n                        })}\n                        >\n                          {todo.title}\n                        </p>\n                      </td>\n                      <td className=\"has-text-right is-vcentered\">\n                        <button\n                          data-cy=\"selectButton\"\n                          className=\"button\"\n                          type=\"button\"\n                          onClick={() => dispatch(actions.setTodo(todo))}\n                        >\n                          <span className=\"icon\">\n                            <i className={classNames(\n                              'far',\n                              {\n                                'fa-eye-slash': selectedTodo?.id === todo.id,\n                                'fa-eye': selectedTodo?.id !== todo.id,\n                              },\n                            )}\n                            />\n                          </span>\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nconst statusArr: Status[] = ['all', 'active', 'completed'];\n\nexport const TodoFilter: React.FC = () => {\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.setQuery(event.target.value));\n  };\n\n  const onChangeSelectHandler\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      return dispatch(actions.setStatus(event.target.value as Status));\n    };\n\n  const resetHandler = () => dispatch(actions.removeQuery());\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={onChangeSelectHandler}\n          >\n            {/* <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option> */}\n            {\n              statusArr.map(status => (\n                <option\n                  key={status}\n                  value={status}\n                >\n                  {\n                    status[0].toUpperCase() + status.slice(1)\n                  }\n                </option>\n              ))\n            }\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={inputHandler}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          filter.query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={resetHandler}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const todo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    if (todo) {\n      getUser(todo.userId).then(setUser).finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {\n        loading ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(actions.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={classNames({\n                  'has-text-danger': !todo?.completed,\n                  'has-text-success': todo?.completed,\n                })}\n                >\n                  {todo?.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                {user && (\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                )}\n              </p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(currTodos => dispatch(actions.setTodos(currTodos)))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {\n              loading ? (\n                <Loader />\n              ) : (\n                <>\n                  <h1 className=\"title\">Todos:</h1>\n\n                  <div className=\"block\">\n                    <TodoFilter />\n                  </div>\n\n                  <div className=\"block\">\n                    <TodoList todos={todos} />\n                  </div>\n                </>\n              )\n            }\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}